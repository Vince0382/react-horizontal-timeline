{"version":3,"sources":["App.module.css","Timeline/Components/GroupItemsGrid/GroupItemsGrid.module.css","Timeline/Components/DefaultElement/DefaultDetailedElement/DefaultDetailedElement.module.css","Timeline/Components/DropZone/DropZone.module.css","Timeline/Components/ElementWrapper/ElementWrapper.module.css","Timeline/Components/MonthSelector/MonthSelector.module.css","Timeline/Components/DaysGrid/DaysGrid.module.css","Timeline/Components/DragPreview/DragPreview.module.css","Timeline/Components/ResizeHandle/ResizeHandle.module.css","Timeline/Components/ItemsGrid/ItemsGrid.module.css","Timeline/Components/DefaultElement/DefaultBasicElement/DefaultBasicElement.module.css","Timeline/Timeline.module.css","assets/images/logo1.png","assets/images/logo2.png","assets/images/logo3.png","assets/images/logo4.png","assets/images/logo5.png","assets/images/logo6.png","assets/images/logo7.png","Timeline/Helpers/Functions.js","Timeline/Constants.js","Timeline/Components/MonthSelector/MonthSelector.js","Timeline/Components/DropZone/DropZone.js","Timeline/Components/DaysGrid/DaysGrid.js","Timeline/Components/DefaultElement/DefaultDetailedElement/DefaultDetailedElement.js","Timeline/Components/DragPreview/DragPreview.js","Timeline/Components/ResizeHandle/ResizeHandle.js","Timeline/Components/ElementWrapper/ElementWrapper.js","Timeline/Components/ItemsGrid/ItemsGrid.js","Timeline/Components/DefaultElement/DefaultBasicElement/DefaultBasicElement.js","Timeline/Components/GroupItemsGrid/GroupItemsGrid.js","Timeline/Components/LayoutGrid/LayoutGrid.js","Timeline/Timeline.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getDaysInMonth","month","year","Date","getDate","dayDiff","d1","d2","Math","round","abs","getTime","rgbaFromArray","arr","alpha","length","join","MONTHS","DAYS","COLORS","MonthSelector","props","currentMonthStr","monthList","currentMonth","currentYear","previousMonthButton","className","classes","Button","style","color","onClick","previousMonthHandler","nextMonthbutton","nextMonthHandler","scroll","defaultProps","DropZone","useDrop","accept","drop","item","updatedItem","resizing","moving","initItem","onDrop","hover","monitor","hovered","resizeItem","moveItem","setHovered","collect","isOver","useState","useEffect","endDate","dropDate","startDate","diff","setTime","dayOfWeek","getDay","isWeekEnd","overClass","DropZoneOver","weekendClass","includeWeekend","WeekendStyle","dropActivated","ref","Day","substr","DaysGrid","rest","width","daysDropGrid","days","helpers","i","border","push","key","borderSytle","borderLeftStyle","grouped","index","Month","DropZones","defaultColors","outerElement","innerElement","DefaultDetailedElement","background","bgColor","ItemFlex","ImagesWrapper","Images","src","logo","alt","draggable","onMouseDown","event","preventDefault","Description","description","id","type","randomColor","getItemStyles","initialOffset","currentOffset","display","x","y","transform","WebkitTransform","DragPreview","useDragLayer","getItem","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","isDragging","ItemStyle","ImageSytle","renderItem","ResizeHandle","useDrag","orientation","resize","innerStyle","left","right","styles","shared","position","top","height","backgroundColor","first","second","ElementWrapper","drag","hoverStyle","hoverStyleActive","setHoverStyleActive","element","customElementType","elementClassName","opacity","cursor","move","showOccurences","ElementOccurences","occurences","overlay","Overlay","onMouseOver","onMouseLeave","RemoveButton","remove","elementType","ItemsGrid","gridItems","setGridItems","gridTemplateColumns","columnTemplate","forEach","getGridTemplateColumns","gridColors","newGridItems","items","map","monthStart","getMonth","yearStart","getFullYear","colorIndex","searchItemId","find","itemId","gridColumn","marginLeft","console","log","onRemove","DefaultBasicElement","GroupItemsGrid","groupedItems","setGroupItems","elementHovered","setElementHovered","groupedItemsTmp","Object","keys","Fragment","Groups","CustomItem","Items","leftWidth","borderBottom","marginTop","GroupViewGrid","SpacerLeft","SpacerRight","LayoutGrid","daysGridElements","offset","prevMonth","nextMonth","inLineStyle","groupedStyle","Timeline","timelineRef","useRef","setItems","timelineWidth","setTimelineWidth","setMonthList","setCurrentMonth","verifiedItems","tmpItem","tmpMonths","options","nbreMonth","months","updateScreenSizeHandler","window","addEventListener","removeEventListener","timelineElement","current","getBoundingClientRect","borderSize","propagatedProps","itemID","newItems","found","findIndex","splice","callBacks","propagate","existingId","max","apply","onAdd","onUpdate","overflowX","toISOString","setMonth","TimelineDefault","Option","marginRight","fontSize","children","Switch","checked","onChange","Slider","Round","App","scrollEnabled","setScrollEnabled","groupedEnabled","setGroupedEnabled","setShowOccurences","logo1","logo2","logo3","logo4","logo5","logo6","logo7","fixedItems","setFixedItems","setOccurences","itemsOccurences","backend","MouseBackEnd","Content","Options","Elements","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdcc966d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"App_Content__ZaMNr\",\"Elements\":\"App_Elements__fmpcd\",\"Timeline\":\"App_Timeline__3mVrs\",\"Switch\":\"App_Switch__3kBoA\",\"Slider\":\"App_Slider__15T2R\",\"Round\":\"App_Round__R_A5H\",\"Options\":\"App_Options__3b1fw\",\"Option\":\"App_Option__LaFRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GroupViewGrid\":\"GroupItemsGrid_GroupViewGrid__HU6TN\",\"SpacerLeft\":\"GroupItemsGrid_SpacerLeft__3yCoe\",\"SpacerRight\":\"GroupItemsGrid_SpacerRight__3GmnG\",\"Groups\":\"GroupItemsGrid_Groups__jQmY-\",\"Items\":\"GroupItemsGrid_Items__2NC82\",\"CustomItem\":\"GroupItemsGrid_CustomItem__3b5NJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DefaultDetailedElement\":\"DefaultDetailedElement_DefaultDetailedElement__3WB_T\",\"ItemFlex\":\"DefaultDetailedElement_ItemFlex__3iW9A\",\"Description\":\"DefaultDetailedElement_Description__1k8nF\",\"ImagesWrapper\":\"DefaultDetailedElement_ImagesWrapper__1fe_4\",\"Images\":\"DefaultDetailedElement_Images__oz5kC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropZone\":\"DropZone_DropZone__3Abg-\",\"DropZoneOver\":\"DropZone_DropZoneOver__1knqV\",\"Day\":\"DropZone_Day__1IcsS\",\"WeekendStyle\":\"DropZone_WeekendStyle__PSsAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ElementWrapper\":\"ElementWrapper_ElementWrapper__3UQ8Q\",\"ElementOccurences\":\"ElementWrapper_ElementOccurences__3i3Jy\",\"Overlay\":\"ElementWrapper_Overlay__9E-ib\",\"RemoveButton\":\"ElementWrapper_RemoveButton__4bgFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthSelector\":\"MonthSelector_MonthSelector__2DtuE\",\"Button\":\"MonthSelector_Button__34orj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DaysGrid\":\"DaysGrid_DaysGrid__1BAo2\",\"DropZones\":\"DaysGrid_DropZones__2-GoM\",\"Month\":\"DaysGrid_Month__i_YIP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DragPreview\":\"DragPreview_DragPreview__nQhug\",\"ItemStyle\":\"DragPreview_ItemStyle__2eaX_\",\"ImageSytle\":\"DragPreview_ImageSytle__1vtCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResizeHandle\":\"ResizeHandle_ResizeHandle__2K2Bp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemsGrid\":\"ItemsGrid_ItemsGrid__3lCP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DefaultBasicElement\":\"DefaultBasicElement_DefaultBasicElement__2Bo_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimelineDefault\":\"Timeline_TimelineDefault__8fRqg\"};","module.exports = __webpack_public_path__ + \"static/media/logo1.c2891fdd.png\";","module.exports = __webpack_public_path__ + \"static/media/logo2.8d314fc0.png\";","module.exports = __webpack_public_path__ + \"static/media/logo3.7cae2123.png\";","module.exports = __webpack_public_path__ + \"static/media/logo4.f2ce6af0.png\";","module.exports = __webpack_public_path__ + \"static/media/logo5.fb95f4c3.png\";","module.exports = __webpack_public_path__ + \"static/media/logo6.e5e58d31.png\";","module.exports = __webpack_public_path__ + \"static/media/logo7.6acd8367.png\";","\nexport const day = 1000 * 60 * 60 * 24;\n\nexport const getDaysInMonth = ( month, year ) => {\n   return new Date(year, month, 0).getDate();\n}\n\nexport const monthDiff = (d1, d2) => {\n    let months;\n    months = (d2.getFullYear() - d1.getFullYear()) * 12;\n    months -= d1.getMonth();\n    months += d2.getMonth();\n    return months <= 0 ? 0 : months + 1;\n}\n\nexport const dayDiff = (d1, d2) => {\n    return Math.round(Math.abs(( new Date(d1).getTime() - new Date(d2).getTime() ) / day ));\n}\n\nexport const timeDiff = (d1, d2) => {\n    return new Date(d1).getTime() - new Date(d2).getTime();\n}\n\nexport const randomRGBAColor = ( alpha, min, max ) => {\n    const minByte = min ? min : 0;\n    const maxByte = max ? max : 255;\n    const randomNumber = () => Math.floor(Math.random() * (maxByte - minByte + 1) + minByte);\n    return `rgba(${[randomNumber(), randomNumber(), randomNumber(), alpha].join(',')})`\n}\n\nexport const rgbaFromArray = (arr, alpha) => {\n    if ( !arr || arr.length !== 3 ) return null;\n    return `rgba(${arr.join(',')}, ${alpha ? alpha : 1})`;\n}\n","export const ELEMENT = 'ELEMENT';\nexport const MONTHS = [ \n    \"\" \n    ,\"January\"\n    ,\"February\"\n    ,\"March\"\n    ,\"April\"\n    ,\"May\"\n    ,\"June\"\n    ,\"July\"\n    ,\"August\"\n    ,\"September\"\n    ,\"October\"\n    ,\"November\"\n    ,\"December\" \n];\nexport const DAYS = [\n    \"Sunday\"\n    ,\"Monday\"\n    ,\"Tuesday\"\n    ,\"Wednesday\"\n    ,\"Thursday\"\n    ,\"Friday\"\n    ,\"Saturday\"];\nexport const COLORS = [\n    [252, 226, 194]   // Bisque\n    , [179, 200, 200] // Pastel Blue\n    , [108, 178, 209] // Iceberg\n    , [79, 158, 196]  // Celestial Blue \n    , [193, 231, 227] // Columbia Blue\n    , [220, 255, 251] // Light Cyan\n    , [255, 220, 244] // Pink Lace\n    , [218, 191, 222] // Thistle\n    , [193, 187, 221] // Lavender Gray\n]","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MONTHS } from '../../Constants';\nimport classes from './MonthSelector.module.css';\n\nconst MonthSelector = props => {\n\n    const currentMonthStr = props.monthList[props.currentMonth] ? MONTHS[props.monthList[props.currentMonth].month] : '';\n    const currentYear = props.monthList[props.currentMonth] ? props.monthList[props.currentMonth].year : '';\n\n    const previousMonthButton = (\n        <p \n            className={classes.Button}\n            style={{color: props.currentMonth === 0 ? '#ccc' : 'black'}} \n            onClick={props.previousMonthHandler}\n        >\n            &#60;\n        </p>\n    )\n\n    const nextMonthbutton = (\n        <p \n            className={classes.Button}\n            style={{color: props.currentMonth === props.monthList.length -1 ? '#ccc' : 'black'}} \n            onClick={props.nextMonthHandler}\n        >\n            &#62;\n        </p>\n    )\n\n    return (\n        <div className={classes.MonthSelector}>\n            {\n                !props.scroll\n                    ?   previousMonthButton\n                    :   null   \n            }\n\n            <p>{`${currentMonthStr} - ${currentYear}`}</p>\n            \n            {\n                !props.scroll\n                    ?   nextMonthbutton\n                    :   null\n            }\n\n        </div>\n    );\n}\n\nMonthSelector.defaultProps = {\n    monthList : []\n}\n\nMonthSelector.propTypes = {\n    monthList : PropTypes.array.isRequired,\n    currentMonth : PropTypes.number.isRequired,\n    previousMonthHandler : PropTypes.func.isRequired,\n    nextMonthHandler : PropTypes.func.isRequired,\n    scroll: PropTypes.bool,\n}\n\nexport default MonthSelector;","import React, { useState, useEffect } from 'react';\nimport { useDrop } from 'react-dnd';\nimport PropTypes from 'prop-types';\n\nimport { ELEMENT, DAYS } from '../../Constants';\nimport { timeDiff, day } from '../../Helpers/Functions';\nimport classes from './DropZone.module.css';\n\nconst DropZone = props => {\n\n    const [{ isOver }, drop] = useDrop({\n        accept: ELEMENT,\n        drop: item => {\n            let updatedItem = item;\n            if ( !item.resizing && !item.moving )\n            {\n                updatedItem = initItem( item );\n            }\n            \n            props.onDrop( updatedItem, true );\n        },\n        hover: ( item, monitor ) => {\n            if ( !hovered && ( item.resizing || item.moving ) ) {\n                let updatedItem = item;\n                if ( item.resizing )\n                {\n                    updatedItem = resizeItem( item );\n                }\n                else if ( item.moving ){\n                    updatedItem = moveItem( item );\n                }\n                \n                props.onDrop( updatedItem );\n                setHovered( true );\n            }\n        },\n\t\tcollect: monitor => ({\n\t\t\tisOver: !!monitor.isOver(),\n\t\t}),\n    });\n\n    const[hovered, setHovered] = useState( false );\n\n\n    useEffect(() => {\n        setHovered( false );\n    }, [isOver]);\n\n\n    // Resize the item on over\n    const resizeItem = item => {\n\n        if (item.resizing === 'right')\n        {\n            item.endDate = props.dropDate;\n            return item;\n        }\n        if (item.resizing === 'left')\n        {\n            item.startDate = props.dropDate;\n            return item;\n        }\n        return null // If the value of resizing is not left or right\n    }\n\n    // Update the item on drop and propagate to host element\n    const moveItem = item => {\n        \n        // Get the time difference between  previously set startDate and the new one\n        let diff = item.startDate ? timeDiff( props.dropDate, item.startDate ) : 0;\n\n        // Set the updated date\n        item.startDate = new Date( props.dropDate );\n\n        // Set the new end date by adding the difference or 0\n        item.endDate = new Date( item.endDate );\n        item.endDate.setTime( item.endDate.getTime() + diff );\n\n        return item;\n    }\n\n    const initItem = item => {\n        item.startDate = new Date( props.dropDate );\n        item.endDate = new Date( props.dropDate );\n\n        // Set the intial end Date with minimum of 1 day \n        item.endDate.setTime( item.endDate.getTime() + day );\n\n        return item;\n    }\n\n    // Get the day of the week\n    const dayOfWeek = props.dropDate.getDay();\n\n    // Detect if the day is a day off (weekend)\n    const isWeekEnd = (dayOfWeek === 6) || (dayOfWeek === 0);\n\n    const overClass = isOver ? classes.DropZoneOver : null\n    const weekendClass = isWeekEnd && !props.includeWeekend ? classes.WeekendStyle : null\n\n    const dropActivated = !isWeekEnd || props.includeWeekend;\n\n    return (\n        <div \n            ref={dropActivated ? drop : null}\n            className={[classes.DropZone, overClass, weekendClass].join(' ')}\n            style={props.style}\n        >\n            <div \n                className={classes.Day} \n                style={{color: isWeekEnd || isOver ? 'white' : '#7787a8'}}\n            >\n                <div>{DAYS[dayOfWeek].substr(0,3)}</div>\n                <div>{props.dropDate.getDate()}</div>\n            </div>\n\n        </div>\n    )\n}\n\nDropZone.defaultProps = {\n    includeWeekend: false\n};\n\nDropZone.propTypes = {\n    style: PropTypes.object,\n    onDrop: PropTypes.func.isRequired,\n    includeWeekend: PropTypes.bool,\n    dropDate: PropTypes.objectOf(Date)\n}\n\nexport default DropZone;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as helpers from '../../Helpers/Functions';\nimport DropZone from '../DropZone/DropZone';\nimport classes from './DaysGrid.module.css';\nimport { MONTHS } from '../../Constants';\n\nexport const MARGIN = 20;\n\nconst DaysGrid = props => {\n\n    const { month, width, ...rest} = props;\n    const daysDropGrid = [];\n    const days = helpers.getDaysInMonth( month.month, month.year);\n\n    let style = {\n        width: props.width / days\n    };\n\n    for( let i = 1; i <= days; i++ )\n    {\n        if ( i === days ) style = {...style, border: 'none'};\n\n        daysDropGrid.push(\n            <DropZone \n                {...rest}\n                style={style}\n                key={`grid_${month.month}_${i}`}\n                dropDate={new Date(month.year, month.month - 1, i)}\n            />\n        ) \n    }\n\n    const borderSytle = {\n        borderLeftStyle: !props.grouped && props.index === 0 ? 'none' : 'solid'\n    }\n    \n    return (\n        <div \n            className={classes.DaysGrid} \n            style={{\n                width: props.width,\n            }}\n        >\n            <div \n                className={classes.Month} \n                style={{\n                    ...props.style,\n                    width: props.width,\n                    ...borderSytle\n                    }}\n            >\n                {`${MONTHS[props.month.month]} ${props.month.year}`}\n            </div>\n            <div \n                className={classes.DropZones} \n                style={{\n                    ...props.style,\n                    ...borderSytle,\n                    width: props.width\n                    }}\n                >\n                {daysDropGrid}\n            </div>\n\n        </div>\n    )\n}\n\nDaysGrid.defaultProps = {\n    width: 0,\n    grouped: false,\n    index: 0\n};\n\nDaysGrid.propTypes = {\n    width: PropTypes.number,\n    onDrop: PropTypes.func,\n    grouped: PropTypes.bool,\n    month: PropTypes.object,\n    index: PropTypes.number\n}\n\nexport default DaysGrid;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { rgbaFromArray } from '../../../Helpers/Functions';\nimport classes from './DefaultDetailedElement.module.css';\n\nconst alpha = 0.7;\nconst defaultColors = {\n    outerElement : [204, 204, 204],\n    innerElement : [70, 130, 180]\n}\n\nconst DefaultDetailedElement = props => {\n\n    return (\n        <div \n            className={[classes.DefaultDetailedElement, props.className].join(' ')}\n            style={{\n                background: props.innerElement ? rgbaFromArray( props.bgColor, alpha ): rgbaFromArray(defaultColors.outerElement, alpha),\n                ...props.style,\n            }}\n                \n        >\n            <div className={classes.ItemFlex}>\n                <div className={classes.ImagesWrapper}>\n                    <img \n                        className={classes.Images} \n                        src={props.item.logo} \n                        alt='Logo' \n                        draggable='false' \n                        onMouseDown={event => event.preventDefault()}\n                    />\n                </div>\n                <div className={classes.Description}>\n                    {\n                        props.item.description\n                    }\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nDefaultDetailedElement.defaultProps = {\n    item: {\n        id: null,\n        logo: '',\n        description: '',\n        startDate: '',\n        endDate: '',\n        type: 'range',\n    },\n    randomColor: false,\n    innerElement: false,\n    bgColor: defaultColors.innerElement\n}\n\nDefaultDetailedElement.propTypes = {\n    item: PropTypes.object.isRequired,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    innerElement: PropTypes.bool,\n    bgColor: PropTypes.array\n}\n\nexport default DefaultDetailedElement;","import React from 'react'\nimport { useDragLayer } from 'react-dnd';\n\nimport { ELEMENT } from '../../Constants';\nimport classes from './DragPreview.module.css';\n\n\nconst getItemStyles = (initialOffset, currentOffset) => {\n    if (!initialOffset || !currentOffset) {\n        return {\n            display: 'none',\n        };\n    }\n    let { x, y } = currentOffset;\n    const transform = `translate(${x}px, ${y}px)`;\n\n    return {\n        transform,\n        WebkitTransform: transform,\n    }\n}\n\nconst DragPreview = props => {\n    const {\n        itemType,\n        isDragging,\n        item,\n        initialOffset,\n        currentOffset,\n\n    } = useDragLayer(monitor => ({\n        item: monitor.getItem(),\n        itemType: monitor.getItemType(),\n        initialOffset: monitor.getInitialSourceClientOffset(),\n        currentOffset: monitor.getSourceClientOffset(),\n        isDragging: monitor.isDragging(),\n    }))\n\n    const renderItem = () => {\n        switch (itemType) {\n          case ELEMENT:\n            return <img className={classes.ImageSytle} src={item.logo} alt=''/>\n          default:\n            return null\n        }\n      }\n\n    if (!isDragging || item.id) {\n        return null\n    }\n\n    return (\n        <div className={classes.DragPreview}>\n            <div \n                className={classes.ItemStyle} \n                style={getItemStyles(initialOffset, currentOffset)}\n            >\n                {renderItem()}\n            </div>\n        </div>\n    )\n}\nexport default DragPreview\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDrag } from 'react-dnd';\nimport { ELEMENT } from '../../Constants';\nimport classes from './ResizeHandle.module.css';\n\nconst ResizeHandle = props => {\n\n    const [, resize ] = useDrag({\n        item: { type: ELEMENT, ...props.item, resizing: props.orientation, moving: false },\n    })\n\n    const innerStyle = props.orientation === 'left' ? {left: 0} : {right: 0};\n\n    return (\n        <div\n            className={classes.ResizeHandle}\n            style={innerStyle}\n            ref={resize}\n        />\n    )\n}\n\nResizeHandle.defaultProps = {\n    item: {},\n}\n\nResizeHandle.propTypes = {\n    item: PropTypes.object.isRequired,\n    orientation: PropTypes.string\n}\n\nexport default ResizeHandle;","import React, { useState } from 'react';\nimport { useDrag } from 'react-dnd';\nimport PropTypes from 'prop-types';\n\nimport { ELEMENT } from '../../Constants';\nimport { rgbaFromArray } from '../../Helpers/Functions';\nimport DefaultDetailedElement from '../DefaultElement/DefaultDetailedElement/DefaultDetailedElement';\nimport DragPreview from '../DragPreview/DragPreview';\nimport ResizeHandle from '../ResizeHandle/ResizeHandle';\nimport classes from './ElementWrapper.module.css';\n\n// Static style section \n\nconst styles = {\n\n    removeButtonLines: {\n        shared: {\n            position: 'absolute',\n            right: '14px',\n            top: '7.5px',\n            height: '15px',\n            width: '2px',\n            backgroundColor: '#E76E54',\n          },\n          first : {\n            transform: 'rotate(45deg)',\n          },\n          second : {\n            transform: 'rotate(-45deg)',\n          }\n    },\n}\n\n\n\n// Main component\nconst ElementWrapper = props => {\n\n    const [{isDragging}, drag ] = useDrag({\n        item: { type: ELEMENT, ...props.item, resizing: null, moving: props.innerElement },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n    });\n\n    const hoverStyle = {\n        border: `2px solid ${rgbaFromArray( props.bgColor )}`,\n    }\n\n    const [hoverStyleActive, setHoverStyleActive] = useState( null );\n\n    // if (isDragging && props.innerElement || isResizing) {\n    //     return <div ref={drag} />\n    // }\n\n    const element = (\n        <props.customElementType \n            className={props.elementClassName}\n            item={props.item}\n            bgColor={props.bgColor}\n            innerElement={props.innerElement}\n        />\n    )\n\n    return (\n        <>\n            <div \n                onClick={props.onClick}\n                ref={drag}\n                className={classes.ElementWrapper}\n                style={{\n                    opacity: isDragging ? 0.5 : 1,\n                    cursor: props.move ? 'move' : 'grab',\n                }}\n            >\n                { element }\n                {\n                    props.showOccurences\n                        ?   <div className={classes.ElementOccurences}>{props.occurences}</div>\n                        :   null\n                }\n                {\n                    props.overlay\n                        ?   <div\n                                className={classes.Overlay}\n                                style={hoverStyleActive}\n                                onMouseOver={() => setHoverStyleActive( hoverStyle )}\n                                onMouseLeave={() => setHoverStyleActive( null )}\n                            >\n                                <div \n                                    className={classes.RemoveButton} \n                                    onClick={props.remove}\n                                >\n                                    <div style={{...styles.removeButtonLines.shared, ...styles.removeButtonLines.first}}/>\n                                    <div style={{...styles.removeButtonLines.shared, ...styles.removeButtonLines.second}}/>\n                                </div>\n                                <ResizeHandle \n                                    orientation='left'\n                                    item={props.item}\n                                />\n                                <ResizeHandle \n                                    orientation='right'\n                                    item={props.item}\n                                />\n                            </div>\n                        :   null\n                }\n            </div>\n            {\n                !props.innerElement\n                    ?   <DragPreview />\n                    :   null\n            }\n            \n        </>\n    )\n}\n\n\n\nElementWrapper.defaultProps = {\n    item: {\n        id: null,\n        logo: '',\n        description: '',\n        startDate: '',\n        endDate: '',\n        elementType: 'range',\n    },\n    innerElement: false,\n    overlay: false,\n    move: false,\n    customElementType: DefaultDetailedElement,\n    occurences: 0,\n    showOccurences: false\n}\n\nElementWrapper.propTypes = {\n    item: PropTypes.object.isRequired,\n    width: PropTypes.number,\n    innerElement: PropTypes.bool,\n    overlay: PropTypes.bool,\n    move: PropTypes.bool,\n    onClick: PropTypes.func,\n    remove: PropTypes.func,\n    customElementType: PropTypes.elementType,\n    elementClassName: PropTypes.string,\n    bgColor: PropTypes.array,\n    occurences: PropTypes.number,\n    showOccurences: PropTypes.bool\n}\n\nexport default ElementWrapper;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ElementWrapper from '../ElementWrapper/ElementWrapper';\nimport { dayDiff, getDaysInMonth } from '../../Helpers/Functions';\nimport { COLORS } from '../../Constants';\nimport classes from './ItemsGrid.module.css';\n\nconst ItemsGrid = props => {\n\n    const [gridItems, setGridItems] = useState();\n\n    // const days = () =>{\n    //     let nbreDays = 0;\n    //     props.monthList.forEach( month => nbreDays += getDaysInMonth( month.month, month.year ));\n    //     return nbreDays;\n    // }\n    \n    const getGridTemplateColumns = () => {\n        const columnTemplate = [];\n        props.monthList.forEach( month => {\n            const days = getDaysInMonth( month.month, month.year );\n            const width = props.width / days;\n\n            for ( let i = 0; i < days ; i++ )\n            {\n                columnTemplate.push(`${width}px`);\n            }\n        });\n\n        return columnTemplate\n    }\n\n    const style = {\n        width: props.width * props.monthList.length,\n        gridTemplateColumns: getGridTemplateColumns().join(' '),\n    }\n\n\n    useEffect(() => {\n        const gridColors = [];\n\n        const newGridItems = props.items.map(( item, index) => {\n            // Exctract month and year from the project start date\n            const monthStart = props.startDate.getMonth();\n            const yearStart = props.startDate.getFullYear();\n    \n            // The gris start at day 1 for each month in the project\n            // In order to place the item correctly inside the common grid (shared between all the months)\n            // I have to calculate the exact position by calculate the number of days between the item start date\n            // and the first day of the starting month of the project\n    \n            const position = Math.round(dayDiff( item.startDate, new Date( yearStart, monthStart, 1 ))) + 1;\n\n            // Select color for the item. If itemId has already a color assigned pick it else create one\n            \n            let color = null;\n\n            // If the colorIndex is provided use it\n            if ( props.colorIndex )\n            {\n                color = COLORS[props.colorIndex]\n            }\n            else    // Else we define it by parsing the array        \n            {\n                let searchItemId = gridColors.find(i => i.itemId === item.itemId);\n\n                if ( searchItemId )\n                {\n                    color = searchItemId.color\n                }\n                else\n                {\n                    color = COLORS[gridColors.length]\n\n                    gridColors.push({\n                        itemId: item.itemId,\n                        color: color\n                    });\n                }\n            }\n    \n            return (\n                <div \n                    style={{\n                        gridColumn: `${position} / ${position + dayDiff( item.endDate, item.startDate ) + 1}`\n                    }} \n                    key={`item_${item.id}_${index}`}\n                >\n                    <ElementWrapper\n                        item={item} \n                        overlay\n                        move\n                        bgColor={color}\n                        elementClassName={props.elementClassName} \n                        innerElement\n                        customElementType={props.customElementType}\n                        style={{marginLeft: 0}}\n                        onClick={() => console.log(item)}\n                        remove={() => props.onRemove( item.id )}\n                    />\n                </div>\n            )\n        });\n\n        setGridItems( newGridItems );\n    }, [props.items, props.startDate]);\n\n    return (\n        <div\n            className={classes.ItemsGrid}\n            style={{...style, ...props.style}}\n        >\n            {gridItems}\n        </div>\n    );\n}\n\nItemsGrid.defaultProps = {\n    items: [],\n    monthList: [],\n}\n\nItemsGrid.propTypes = {\n    items: PropTypes.array,\n    width: PropTypes.number,\n    onRemove: PropTypes.func,\n    elementClassName: PropTypes.string,\n    customElementType: PropTypes.elementType,\n    style: PropTypes.object,\n    monthList: PropTypes.array,\n    startDate: PropTypes.objectOf(Date),\n    colorIndex: PropTypes.number\n}\n\nexport default ItemsGrid;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { rgbaFromArray } from '../../../Helpers/Functions';\nimport classes from './DefaultBasicElement.module.css';\n\nconst alpha = 0.7;\n\nconst DefaultBasicElement = props => {\n\n    return (\n        <div \n            className={[classes.DefaultBasicElement, props.className].join(' ')}\n            style={{\n                ...props.style, \n                background: rgbaFromArray( props.bgColor, alpha )}}\n        >   \n        </div>\n    )\n}\n\nDefaultBasicElement.defaultProps = {\n\n}\n\nDefaultBasicElement.propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    bgColor: PropTypes.array\n}\n\nexport default DefaultBasicElement;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DefaultBasicElement from '../DefaultElement/DefaultBasicElement/DefaultBasicElement';\nimport DefaultDetailedElement from '../DefaultElement/DefaultDetailedElement/DefaultDetailedElement';\nimport ItemsGrid from '../ItemsGrid/ItemsGrid';\nimport classes from './GroupItemsGrid.module.css';\n\nconst GroupItemsGrid = props => {\n\n    const [groupedItems, setGroupItems] = useState( {} );\n    const [elementHovered, setElementHovered] = useState( null );\n\n    useEffect(() => {\n        const groupedItemsTmp = {};\n        props.items.forEach( item => {\n            if ( !groupedItemsTmp[item.itemId] ) \n            {\n                groupedItemsTmp[item.itemId] = []\n            }\n\n            groupedItemsTmp[item.itemId].push( item );\n        })\n\n        setGroupItems( groupedItemsTmp );\n\n    }, [props.items, props.startDate]);\n\n    const hoverStyle = {background: '#f1f1f1'}\n\n    const grouped = (\n        Object.keys(groupedItems).map(( items, index ) => (\n            <React.Fragment key={`groups_items_${items}${index}`}>\n                <div \n                    className={classes.Groups}\n                    style={elementHovered === index ? {...hoverStyle} : null} \n                    onMouseOver={() => setElementHovered( index )}\n                    onMouseLeave={() => setElementHovered( null )}\n                >\n                    <DefaultDetailedElement \n                        item={groupedItems[items][0]} \n                        className={classes.CustomItem}\n                        style={{background: 'transparent'}}\n                    />\n                </div>\n                <div \n                    className={classes.Items}\n                    style={elementHovered === index ? hoverStyle : null}\n                    onMouseOver={() => setElementHovered( index )}\n                    onMouseLeave={() => setElementHovered( null )}\n                >\n                    <ItemsGrid \n                        {...props}\n                        width={props.width - props.leftWidth} /* Set the width of the itemGrid to fit inside the grid defined*/\n                        style={{...props.style, borderBottom: '1px solid #f1f1f1', marginTop: 0}}\n                        items={groupedItems[items]}\n                        colorIndex={index}\n                    />\n                </div>\n            </React.Fragment>\n        ))\n    )\n\n    return (\n        <div \n            className={classes.GroupViewGrid} \n            style={{\n                width: `${(props.width - props.leftWidth) * props.monthList.length + props.leftWidth}px`,\n                gridTemplateColumns: `${props.leftWidth}px ${(props.width - props.leftWidth) * props.monthList.length}px`\n            }}\n        >\n            <div className={classes.SpacerLeft} />\n            <div className={classes.SpacerRight} />\n            {grouped}\n        </div>\n    )\n}\n\nGroupItemsGrid.defaultProps = {\n    items: [],\n    customElementType: DefaultBasicElement,\n    leftWidth: 220\n}\n\nGroupItemsGrid.propTypes = {\n    items: PropTypes.array,\n    customElementType: PropTypes.elementType,\n    startDate: PropTypes.objectOf(Date),\n    leftWidth: PropTypes.number\n}\n\nexport default GroupItemsGrid;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DaysGrid from '../DaysGrid/DaysGrid';\nimport ItemsGrid from '../ItemsGrid/ItemsGrid';\nimport GroupItemsGrid from '../GroupItemsGrid/GroupItemsGrid';\n\nconst leftWidth = 220;\n\nconst LayoutGrid = props => {\n\n    const daysGridElements = ( width, offset ) => (\n        props.monthList.map(( month, index ) => (\n            <DaysGrid \n                key={`daysGrid_${month.month}_${month.year}`}\n                onDrop={props.onDrop}\n                month={month}\n                index={index}\n                scroll={props.scroll}\n                grouped={props.grouped}\n                prevMonth ={props.prevMonth}\n                nextMonth={props.nextMonth}\n                monthList={props.monthList}\n                currentMonth={props.currentMonth}\n                offset={offset}\n                width={offset ? width - offset : width}\n                style={{transform: `translateX(${( 100 * index ) - ( 100 * props.currentMonth )}%)`, marginLeft: offset ? offset : 0}}\n            >\n            </DaysGrid>\n        ))\n    );\n\n\n    //Inline view without groups \n    const inLineStyle = (\n        <>\n            {daysGridElements( props.width )}\n            <ItemsGrid {...props} style={{transform: `translateX(-${( props.width * props.currentMonth )}px)`}}/>\n        </>\n    )\n\n    // Groups view\n    const groupedStyle = (\n        <>\n            {daysGridElements( props.width, leftWidth )}\n            <GroupItemsGrid\n                {...props} \n                width={props.width}\n                leftWidth={leftWidth}\n                style={{transform: `translateX(-${(( props.width - leftWidth ) * props.currentMonth )}px)`}}\n            />\n        </>\n    )\n\n    return (\n        <>\n        {\n            !props.grouped\n                ?   inLineStyle\n                :   groupedStyle\n        }\n        </>\n    )\n\n}\n\nLayoutGrid.defaultProps = {\n    monthList: [],\n    currentMonth: 0,\n    scroll: false\n}\n\nLayoutGrid.propTypes = {\n    grouped: PropTypes.bool,\n    monthList: PropTypes.array,\n    currentMonth: PropTypes.number,\n    onDrop: PropTypes.func,\n    width: PropTypes.number,\n    scroll: PropTypes.bool\n}\n\nexport default LayoutGrid;","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as helpers from './Helpers/Functions';\nimport MonthSelector from './Components/MonthSelector/MonthSelector';\nimport LayoutGrid from './Components/LayoutGrid/LayoutGrid';\n\nimport classes from './Timeline.module.css';\n\n\n// Component\nconst Timeline = props => {\n\n    const baseIndex = 100000000;\n    const timelineRef = useRef();\n    const borderSize = 1;\n\n    const [items, setItems] = useState( [] );\n    const [timelineWidth, setTimelineWidth] = useState( 0 );\n    const [monthList, setMonthList] = useState( [] );\n    const [currentMonth, setCurrentMonth] = useState( 0 );\n\n    // Get the higher id and increase\n    const getNextId = () => {\n        return Math.max.apply(Math, items.map(item => { return item.id; })) + 1\n    }\n\n    // Loop inside props.items to assign an ID if missing\n\n    useEffect (() => {\n        const verifiedItems = [];\n\n        props.items.forEach(( item, index ) => {\n            const tmpItem = {\n                ...item,\n                startDate: item.startDate ? new Date(item.startDate) : null,\n                endDate: item.endDate ? new Date(item.endDate) : null\n            }\n\n            if ( item.id ){\n                verifiedItems.push(tmpItem);\n            }\n            else{\n                verifiedItems.push({\n                    ...tmpItem,\n                    id: baseIndex + index\n                })\n            }\n        });\n\n        setItems( verifiedItems );\n\n    }, [props.items]);\n\n    // Update boxes size on window resized\n    useEffect(() => {\n\n        const tmpMonths = [];\n        let startDate = new Date( props.options.startDate );\n        const endDate = new Date( props.options.endDate );\n\n        const nbreMonth = helpers.monthDiff( startDate, endDate );\n\n        for (let i = 0; i < nbreMonth; i++){\n            tmpMonths.push({\n                    month: startDate.getMonth() + i + 1 ,\n                    year: startDate.getFullYear()\n                })\n        }\n        setMonthList( tmpMonths );\n        updateScreenSizeHandler();\n\n        window.addEventListener( 'resize', updateScreenSizeHandler );\n        return () => window.removeEventListener( 'resize', updateScreenSizeHandler );\n    }, [props.options.startDate, props.options.endDate]);\n\n\n    const updateScreenSizeHandler = () => {\n        // Get the timeline element size \n        const timelineElement = timelineRef.current.getBoundingClientRect();\n\n        // Update the state with the width of the timneline width\n        setTimelineWidth( timelineElement.width - ( borderSize * 2 ));\n\n    }\n\n    const onDropHandler = ( item, propagate ) => {\n\n        // Parsing data from dropped component\n        //const item = JSON.parse(event.dataTransfer.getData(\"text\"));\n        const newItems = [...items];\n        let existingId = -1;\n        let tmpItem = {\n            ...item,\n            id: item.id ? item.id : getNextId(), // Check if the item has an ID and if not assign one\n        }\n\n        //Check if the item is updated or created\n        if ( item.id )\n        {\n            existingId = newItems.findIndex( i => i.id === item.id );\n        }\n\n        // Add the new item to the item array only if it is not already present\n        if( existingId === -1 )\n        {\n            newItems.push( tmpItem );\n            if ( props.options.callBacks.onAdd && propagate ) props.options.callBacks.onAdd({item: {...tmpItem}, items: [...newItems]});\n        }\n        else //Update item\n        {\n            newItems[existingId] = tmpItem;\n            if ( props.options.callBacks.onUpdate && propagate ) props.options.callBacks.onUpdate({item: {...tmpItem}, items: [...newItems]});\n        }\n\n        // Update state with the updated items array\n        setItems( newItems );\n\n\n    }\n\n    const onRemoveItemHandler = itemID => {\n        const newItems = [...items];\n        let item = null;\n\n        const found = newItems.findIndex(i => i.id === itemID );\n\n        // Remove the item at the 'index' position if founded\n        if ( found !== -1 )\n        {\n            item = newItems[found];\n            newItems.splice( found, 1 );\n            // Update state with the new array items\n            setItems( newItems );\n        }\n        else \n        {\n            console.log(`ID : ${itemID} not found`);\n        }\n\n        if ( props.options.callBacks.onRemove ) props.options.callBacks.onRemove({item: {...item}, items: [...newItems]});\n    }\n\n    // Props list to pass to the Layout component\n\n    const propagatedProps = {\n        items: items,\n        width: timelineWidth,\n        monthList: monthList,\n        currentMonth: currentMonth,\n        onRemove: onRemoveItemHandler,\n        onDrop: onDropHandler,\n        grouped: props.grouped,\n        scroll: props.scroll,\n        customElementType: props.customElementType,\n        elementClassName: props.elementClassName,\n        startDate: new Date( props.options.startDate ),\n    }\n\n    return (\n        <React.Fragment>\n        <div\n            className={`${props.className}`}\n            style={{\n                border: `${borderSize}px solid #ccc`, \n                overflowX: props.scroll ? 'scroll' : 'hidden',\n                ...props.style\n            }}\n            ref={timelineRef}\n        >\n            \n            <LayoutGrid {...propagatedProps} />\n            \n        </div>\n        \n        {\n            !props.scroll\n                ?   <MonthSelector \n                        monthList={monthList}\n                        currentMonth={currentMonth}\n                        previousMonthHandler={() => setCurrentMonth( currentMonth - 1 <= 0 ? 0 : currentMonth - 1 )}\n                        nextMonthHandler={() => setCurrentMonth( currentMonth + 1 >= monthList.length - 1 ? monthList.length - 1 : currentMonth + 1 )}\n                    />\n                :   null\n        }\n\n\n        </React.Fragment>\n    )\n}\n\n\nTimeline.defaultProps = {\n    items: [],\n    options: {\n        callBacks: {\n            onAdd: null,\n            onRemove: null,\n            onUpdate: null\n        },\n        startDate: new Date().toISOString(),\n        endDate: new Date().setMonth( new Date().getMonth() + 1)\n    },\n    scroll: false,\n    grouped: false,\n    className: classes.TimelineDefault\n};\n\nTimeline.propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    onDragClass: PropTypes.string,\n    elementClassName: PropTypes.string,\n    items: PropTypes.array,\n    customElementType: PropTypes.elementType,\n    options: PropTypes.shape({\n        callBacks: PropTypes.shape({\n            onAdd: PropTypes.func,\n            onRemove: PropTypes.func,\n            onUpdate: PropTypes.func\n        }),\n        startDate: PropTypes.string.isRequired,\n        endDate: PropTypes.string.isRequired\n    }),\n    scroll: PropTypes.bool,\n    grouped: PropTypes.bool,\n}\n\nexport default Timeline;","import React, { useState, useEffect } from 'react';\nimport { DndProvider } from 'react-dnd';\n//import HTML5Backend from 'react-dnd-html5-backend';\nimport MouseBackEnd from 'react-dnd-mouse-backend'\n\nimport classes from './App.module.css';\n\nimport Timeline from './Timeline/Timeline';\nimport ElementWrapper from './Timeline/Components/ElementWrapper/ElementWrapper';\n\n//import logo\nimport logo1 from './assets/images/logo1.png';\nimport logo2 from './assets/images/logo2.png';\nimport logo3 from './assets/images/logo3.png';\nimport logo4 from './assets/images/logo4.png';\nimport logo5 from './assets/images/logo5.png';\nimport logo6 from './assets/images/logo6.png';\nimport logo7 from './assets/images/logo7.png';\n\n\n//Internal Component \n\nconst Option = props => (\n    <div className={classes.Option}>\n        <span style={{marginRight: '10px', fontSize: '14px'}}>{props.children}</span>\n        <label className={classes.Switch}>\n            <input type=\"checkbox\" checked={props.checked} onChange={props.onChange}/>\n            <span className={`${classes.Slider} ${classes.Round}`}></span>\n        </label>\n    </div>\n)\n\n\nconst App = () =>  {\n\n    const [scrollEnabled, setScrollEnabled] = useState( true );\n    const [groupedEnabled, setGroupedEnabled] = useState( true );\n    const [showOccurences, setShowOccurences] = useState( true );\n\n    const items = [\n        {\n            itemId: 1,\n            logo: logo1,\n            description: 'Caro Confort',\n            elementType: 'range',\n        },\n        {\n            itemId: 2,\n            logo: logo2,\n            description: 'AB Menuiserie',\n            elementType: 'range',\n        },\n        {\n            itemId: 3,\n            logo: logo3,\n            description: 'Fournier',\n            elementType: 'range',\n        },\n        {\n            itemId: 4,\n            logo: logo4,\n            description: 'Krëfel',\n            elementType: 'range',\n        },\n        {\n            itemId: 5,\n            logo: logo5,\n            description: 'MG Terrassements',\n            elementType: 'range',\n        },\n        {\n            itemId: 6,\n            logo: logo6,\n            description: 'Roosens Bétons',\n            elementType: 'range',\n        },\n        {\n            itemId: 7,\n            logo: logo7,\n            description: 'Sopi Façades',\n            elementType: 'range',\n        },\n    ];\n\n    const [fixedItems, setFixedItems] = useState([\n        {\n            ...items[0],\n            startDate: '2019-10-02',\n            endDate: '2019-10-08',\n            elementType: 'range',\n        },\n        {\n            ...items[5],\n            startDate: '2019-10-08',\n            endDate: '2019-10-12',\n            elementType: 'range',\n        },\n        {\n            ...items[3],\n            startDate: '2019-10-15',\n            endDate: '2019-10-17',\n            elementType: 'range',\n        },\n        {\n            ...items[1],\n            startDate: '2019-10-25',\n            endDate: '2019-10-29',\n            elementType: 'range',\n        },\n        {\n            ...items[2],\n            startDate: '2019-11-15',\n            endDate: '2019-11-18',\n            elementType: 'range',\n        },\n        {\n            ...items[6],\n            startDate: '2019-11-14',\n            endDate: '2019-11-21',\n            elementType: 'range',\n        },\n        {\n            ...items[1],\n            startDate: '2019-11-20',\n            endDate: '2019-11-29',\n            elementType: 'range',\n        },\n        {\n            ...items[0],\n            startDate: '2019-12-07',\n            endDate: '2019-12-17',\n            elementType: 'range',\n        },\n        {\n            ...items[2],\n            startDate: '2019-12-22',\n            endDate: '2019-12-27',\n            elementType: 'range',\n        }\n    ]);\n\n    const [occurences, setOccurences] = useState({});\n\n    useEffect(() => {\n        if ( showOccurences )\n        {\n            let itemsOccurences = {}\n            fixedItems.forEach( item => {\n                itemsOccurences = {\n                    ...itemsOccurences,\n                    [item.itemId] : itemsOccurences[item.itemId] ? itemsOccurences[item.itemId]  + 1 : 1\n                }\n            });\n\n            setOccurences( itemsOccurences );\n        }\n    }, [fixedItems, showOccurences]);\n\n    const startDate = '2019-10-01';\n    const endDate = '2019-12-31';\n\n    const addHandler = ( {item, items} ) => {\n        console.log( `Added : ${item}` );\n        setFixedItems( items );\n    }\n\n    const removeHandler = ( {item, items} ) => {\n        console.log( `Removed : ${item}` );\n        setFixedItems( items );\n    }\n\n    const updateHandler = ( {item, items} ) => {\n        console.log( `Updated : ${item}` );\n        setFixedItems( items );\n    }\n\n    const options = {\n        callBacks : {\n            onAdd : addHandler,\n            onRemove: removeHandler,\n            onUpdate: updateHandler\n        },\n        startDate : startDate, \n        endDate: endDate\n    }\n\n\n    return (\n        <DndProvider backend={MouseBackEnd}>\n            <div className={classes.Content}>\n                <p>Options</p>\n                <div className={classes.Options}>\n                    <Option checked={scrollEnabled} onChange={() => setScrollEnabled( !scrollEnabled )}>\n                        Enable Scroll\n                    </Option>\n                    <Option checked={groupedEnabled} onChange={() => setGroupedEnabled( !groupedEnabled )}>\n                        Grouped View\n                    </Option>\n                    <Option checked={showOccurences} onChange={() => setShowOccurences( !showOccurences )}>\n                        Show Occurences\n                    </Option>\n                </div>\n                <p>Droppable Items</p>\n                <div className={classes.Elements}>\n                    {\n                        items.map(( item, index ) => (\n                            <div style={{marginRight: '10px'}} key={`main_item_${index}`}>\n                                <ElementWrapper \n                                    item={item}\n                                    showOccurences={showOccurences}\n                                    occurences={occurences[item.itemId]}\n                                />\n                            </div>\n                        ))\n                    }\n                </div>\n                <div className={classes.Timeline}>\n                    <Timeline items={fixedItems} options={options} scroll={scrollEnabled} grouped={groupedEnabled}/>\n                </div>\n\n            </div>\n        </DndProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}